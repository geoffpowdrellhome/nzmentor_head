<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:jee="http://www.springframework.org/schema/jee"
       xsi:schemaLocation="
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.0.xsd">

    <!-- Load spring config from DAO layer -->
    <import resource="classpath:datasource-context.xml"/>

    <security:http auto-config='true'>
        <security:intercept-url pattern="/faregate-admin/spring_security_login*" filters="none"/>
        <security:intercept-url pattern="/faregate-admin/queues/index" access="IS_AUTHENTICATED_ANONYMOUSLY"/>
        <security:intercept-url pattern="/faregate-admin/**" access="ROLE_USER,ROLE_ADMIN"/>
    </security:http>
    <security:authentication-manager>
        <security:authentication-provider>
            <security:jdbc-user-service data-source-ref="fareGateDataSource"
                                        users-by-username-query="select username, password, decode(active,'Y',1,0) from users where username=?"
                                        authorities-by-username-query="select users.username, authority from authorities inner join users on users.id=authorities.user_id where users.username=?"/>
        </security:authentication-provider>
    </security:authentication-manager>

</beans>