<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:ehcache="http://www.springframework.org/schema/task"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-3.0.xsd http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd">

    <bean id="propertyPlaceholderConfigurer"
          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <!-- Put the mentorconfig.properties file that lives in ../faregate-dao/config to your home/mentorconfiguration folder -->
                <value>file:${user.home}/mentorconfiguration/mentorconfig.properties</value>
            </list>
        </property>
    </bean>

    <bean id="dev" class="java.lang.Boolean">
        <constructor-arg value="${dev.env}" />
    </bean>

    <bean id="mentorDataSource"
          class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="${mentor.jdbc.driverclassname}"/>
        <property name="url" value="${mentor.jdbc.url}"/>
        <property name="username" value="${mentor.jdbc.username}"/>
        <property name="password" value="${mentor.jdbc.password}"/>
    </bean>

    <bean id="mentorEntityManagerFactory"
          class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="persistenceUnitName" value="mentorPU"/>
        <property name="dataSource" ref="mentorDataSource"/>
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <property name="generateDdl" value="false"/>
            </bean>
        </property>
        <property name="jpaPropertyMap">
            <map>
                <entry key="hibernate.cache.provider_class" value="org.hibernate.cache.EhCacheProvider"/>
                <entry key="hibernate.cache.use_second_level_cache" value="true"/>
                <entry key="hibernate.cache.use_query_cache" value="true"/>
                <entry key="hibernate.show_sql" value="true"/>
                <entry key="hibernate.format_sql" value="true"/>
                <entry key="hibernate.dialect" value="${mentor.hibernate.dialect}"/>
                <entry key="hibernate.generate_statistics" value="true"/>
                <entry key="hibernate.jdbc.batch_size" value="0"/>
            </map>
        </property>
    </bean>

    <bean id="mentorTransactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="mentorEntityManagerFactory"/>
    </bean>

    <context:component-scan base-package="com.travel.mentor.dao.assemble"/>

    <context:component-scan base-package="com.travel.mentor.dao">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Repository"/>
    </context:component-scan>

    <tx:annotation-driven transaction-manager="mentorTransactionManager"/>

    <bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor"/>
    <bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor"/>


    <bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
        <property name="configLocation">
            <value>classpath:ehcache.xml</value>
        </property>
    </bean>
    <!--<ehcache:annotation-driven cache-manager="cacheManager"/>-->

</beans>